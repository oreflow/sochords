// Code generated by protoc-gen-go. DO NOT EDIT.
// source: instructions.proto

package sochordspb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChordType int32

const (
	ChordType_UNKNOWN_CHORD ChordType = 0
	ChordType_A             ChordType = 1
	ChordType_B             ChordType = 2
	ChordType_C             ChordType = 3
	ChordType_D             ChordType = 4
	ChordType_E             ChordType = 5
	ChordType_F             ChordType = 6
	ChordType_G             ChordType = 7
)

var ChordType_name = map[int32]string{
	0: "UNKNOWN_CHORD",
	1: "A",
	2: "B",
	3: "C",
	4: "D",
	5: "E",
	6: "F",
	7: "G",
}

var ChordType_value = map[string]int32{
	"UNKNOWN_CHORD": 0,
	"A":             1,
	"B":             2,
	"C":             3,
	"D":             4,
	"E":             5,
	"F":             6,
	"G":             7,
}

func (x ChordType) String() string {
	return proto.EnumName(ChordType_name, int32(x))
}

func (ChordType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dfa0142f2ed0bc3e, []int{0}
}

type StringCombination struct {
	E4                   string   `protobuf:"bytes,1,opt,name=e4,proto3" json:"e4,omitempty"`
	B                    string   `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
	G                    string   `protobuf:"bytes,3,opt,name=g,proto3" json:"g,omitempty"`
	D                    string   `protobuf:"bytes,4,opt,name=d,proto3" json:"d,omitempty"`
	A                    string   `protobuf:"bytes,5,opt,name=a,proto3" json:"a,omitempty"`
	E2                   string   `protobuf:"bytes,6,opt,name=e2,proto3" json:"e2,omitempty"`
	Chord                string   `protobuf:"bytes,7,opt,name=chord,proto3" json:"chord,omitempty"`
	Guide                string   `protobuf:"bytes,8,opt,name=guide,proto3" json:"guide,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringCombination) Reset()         { *m = StringCombination{} }
func (m *StringCombination) String() string { return proto.CompactTextString(m) }
func (*StringCombination) ProtoMessage()    {}
func (*StringCombination) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa0142f2ed0bc3e, []int{0}
}

func (m *StringCombination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringCombination.Unmarshal(m, b)
}
func (m *StringCombination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringCombination.Marshal(b, m, deterministic)
}
func (m *StringCombination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringCombination.Merge(m, src)
}
func (m *StringCombination) XXX_Size() int {
	return xxx_messageInfo_StringCombination.Size(m)
}
func (m *StringCombination) XXX_DiscardUnknown() {
	xxx_messageInfo_StringCombination.DiscardUnknown(m)
}

var xxx_messageInfo_StringCombination proto.InternalMessageInfo

func (m *StringCombination) GetE4() string {
	if m != nil {
		return m.E4
	}
	return ""
}

func (m *StringCombination) GetB() string {
	if m != nil {
		return m.B
	}
	return ""
}

func (m *StringCombination) GetG() string {
	if m != nil {
		return m.G
	}
	return ""
}

func (m *StringCombination) GetD() string {
	if m != nil {
		return m.D
	}
	return ""
}

func (m *StringCombination) GetA() string {
	if m != nil {
		return m.A
	}
	return ""
}

func (m *StringCombination) GetE2() string {
	if m != nil {
		return m.E2
	}
	return ""
}

func (m *StringCombination) GetChord() string {
	if m != nil {
		return m.Chord
	}
	return ""
}

func (m *StringCombination) GetGuide() string {
	if m != nil {
		return m.Guide
	}
	return ""
}

type TabInstructionBlock struct {
	Picks                []*StringCombination `protobuf:"bytes,1,rep,name=picks,proto3" json:"picks,omitempty"`
	BreakLine            bool                 `protobuf:"varint,2,opt,name=break_line,json=breakLine,proto3" json:"break_line,omitempty"`
	TrailingText         string               `protobuf:"bytes,3,opt,name=trailing_text,json=trailingText,proto3" json:"trailing_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TabInstructionBlock) Reset()         { *m = TabInstructionBlock{} }
func (m *TabInstructionBlock) String() string { return proto.CompactTextString(m) }
func (*TabInstructionBlock) ProtoMessage()    {}
func (*TabInstructionBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa0142f2ed0bc3e, []int{1}
}

func (m *TabInstructionBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TabInstructionBlock.Unmarshal(m, b)
}
func (m *TabInstructionBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TabInstructionBlock.Marshal(b, m, deterministic)
}
func (m *TabInstructionBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TabInstructionBlock.Merge(m, src)
}
func (m *TabInstructionBlock) XXX_Size() int {
	return xxx_messageInfo_TabInstructionBlock.Size(m)
}
func (m *TabInstructionBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_TabInstructionBlock.DiscardUnknown(m)
}

var xxx_messageInfo_TabInstructionBlock proto.InternalMessageInfo

func (m *TabInstructionBlock) GetPicks() []*StringCombination {
	if m != nil {
		return m.Picks
	}
	return nil
}

func (m *TabInstructionBlock) GetBreakLine() bool {
	if m != nil {
		return m.BreakLine
	}
	return false
}

func (m *TabInstructionBlock) GetTrailingText() string {
	if m != nil {
		return m.TrailingText
	}
	return ""
}

type TabInstruction struct {
	TabBlocks            []*TabInstructionBlock `protobuf:"bytes,1,rep,name=tab_blocks,json=tabBlocks,proto3" json:"tab_blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TabInstruction) Reset()         { *m = TabInstruction{} }
func (m *TabInstruction) String() string { return proto.CompactTextString(m) }
func (*TabInstruction) ProtoMessage()    {}
func (*TabInstruction) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa0142f2ed0bc3e, []int{2}
}

func (m *TabInstruction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TabInstruction.Unmarshal(m, b)
}
func (m *TabInstruction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TabInstruction.Marshal(b, m, deterministic)
}
func (m *TabInstruction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TabInstruction.Merge(m, src)
}
func (m *TabInstruction) XXX_Size() int {
	return xxx_messageInfo_TabInstruction.Size(m)
}
func (m *TabInstruction) XXX_DiscardUnknown() {
	xxx_messageInfo_TabInstruction.DiscardUnknown(m)
}

var xxx_messageInfo_TabInstruction proto.InternalMessageInfo

func (m *TabInstruction) GetTabBlocks() []*TabInstructionBlock {
	if m != nil {
		return m.TabBlocks
	}
	return nil
}

type Chord struct {
	ChordType            ChordType `protobuf:"varint,1,opt,name=chord_type,json=chordType,proto3,enum=instructions.ChordType" json:"chord_type,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Chord) Reset()         { *m = Chord{} }
func (m *Chord) String() string { return proto.CompactTextString(m) }
func (*Chord) ProtoMessage()    {}
func (*Chord) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa0142f2ed0bc3e, []int{3}
}

func (m *Chord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chord.Unmarshal(m, b)
}
func (m *Chord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chord.Marshal(b, m, deterministic)
}
func (m *Chord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chord.Merge(m, src)
}
func (m *Chord) XXX_Size() int {
	return xxx_messageInfo_Chord.Size(m)
}
func (m *Chord) XXX_DiscardUnknown() {
	xxx_messageInfo_Chord.DiscardUnknown(m)
}

var xxx_messageInfo_Chord proto.InternalMessageInfo

func (m *Chord) GetChordType() ChordType {
	if m != nil {
		return m.ChordType
	}
	return ChordType_UNKNOWN_CHORD
}

func (m *Chord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ChordInLyric struct {
	Chord                *Chord   `protobuf:"bytes,1,opt,name=chord,proto3" json:"chord,omitempty"`
	Offset               int32    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChordInLyric) Reset()         { *m = ChordInLyric{} }
func (m *ChordInLyric) String() string { return proto.CompactTextString(m) }
func (*ChordInLyric) ProtoMessage()    {}
func (*ChordInLyric) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa0142f2ed0bc3e, []int{4}
}

func (m *ChordInLyric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChordInLyric.Unmarshal(m, b)
}
func (m *ChordInLyric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChordInLyric.Marshal(b, m, deterministic)
}
func (m *ChordInLyric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChordInLyric.Merge(m, src)
}
func (m *ChordInLyric) XXX_Size() int {
	return xxx_messageInfo_ChordInLyric.Size(m)
}
func (m *ChordInLyric) XXX_DiscardUnknown() {
	xxx_messageInfo_ChordInLyric.DiscardUnknown(m)
}

var xxx_messageInfo_ChordInLyric proto.InternalMessageInfo

func (m *ChordInLyric) GetChord() *Chord {
	if m != nil {
		return m.Chord
	}
	return nil
}

func (m *ChordInLyric) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ChordsAndLyrics struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LyricLine            string          `protobuf:"bytes,2,opt,name=lyric_line,json=lyricLine,proto3" json:"lyric_line,omitempty"`
	ChordsInLyric        []*ChordInLyric `protobuf:"bytes,3,rep,name=chords_in_lyric,json=chordsInLyric,proto3" json:"chords_in_lyric,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ChordsAndLyrics) Reset()         { *m = ChordsAndLyrics{} }
func (m *ChordsAndLyrics) String() string { return proto.CompactTextString(m) }
func (*ChordsAndLyrics) ProtoMessage()    {}
func (*ChordsAndLyrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa0142f2ed0bc3e, []int{5}
}

func (m *ChordsAndLyrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChordsAndLyrics.Unmarshal(m, b)
}
func (m *ChordsAndLyrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChordsAndLyrics.Marshal(b, m, deterministic)
}
func (m *ChordsAndLyrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChordsAndLyrics.Merge(m, src)
}
func (m *ChordsAndLyrics) XXX_Size() int {
	return xxx_messageInfo_ChordsAndLyrics.Size(m)
}
func (m *ChordsAndLyrics) XXX_DiscardUnknown() {
	xxx_messageInfo_ChordsAndLyrics.DiscardUnknown(m)
}

var xxx_messageInfo_ChordsAndLyrics proto.InternalMessageInfo

func (m *ChordsAndLyrics) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ChordsAndLyrics) GetLyricLine() string {
	if m != nil {
		return m.LyricLine
	}
	return ""
}

func (m *ChordsAndLyrics) GetChordsInLyric() []*ChordInLyric {
	if m != nil {
		return m.ChordsInLyric
	}
	return nil
}

type ChordInstruction struct {
	ChordsAndLyrics      []*ChordsAndLyrics `protobuf:"bytes,1,rep,name=chords_and_lyrics,json=chordsAndLyrics,proto3" json:"chords_and_lyrics,omitempty"`
	Chords               []*Chord           `protobuf:"bytes,2,rep,name=chords,proto3" json:"chords,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ChordInstruction) Reset()         { *m = ChordInstruction{} }
func (m *ChordInstruction) String() string { return proto.CompactTextString(m) }
func (*ChordInstruction) ProtoMessage()    {}
func (*ChordInstruction) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa0142f2ed0bc3e, []int{6}
}

func (m *ChordInstruction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChordInstruction.Unmarshal(m, b)
}
func (m *ChordInstruction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChordInstruction.Marshal(b, m, deterministic)
}
func (m *ChordInstruction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChordInstruction.Merge(m, src)
}
func (m *ChordInstruction) XXX_Size() int {
	return xxx_messageInfo_ChordInstruction.Size(m)
}
func (m *ChordInstruction) XXX_DiscardUnknown() {
	xxx_messageInfo_ChordInstruction.DiscardUnknown(m)
}

var xxx_messageInfo_ChordInstruction proto.InternalMessageInfo

func (m *ChordInstruction) GetChordsAndLyrics() []*ChordsAndLyrics {
	if m != nil {
		return m.ChordsAndLyrics
	}
	return nil
}

func (m *ChordInstruction) GetChords() []*Chord {
	if m != nil {
		return m.Chords
	}
	return nil
}

func init() {
	proto.RegisterEnum("instructions.ChordType", ChordType_name, ChordType_value)
	proto.RegisterType((*StringCombination)(nil), "instructions.StringCombination")
	proto.RegisterType((*TabInstructionBlock)(nil), "instructions.TabInstructionBlock")
	proto.RegisterType((*TabInstruction)(nil), "instructions.TabInstruction")
	proto.RegisterType((*Chord)(nil), "instructions.Chord")
	proto.RegisterType((*ChordInLyric)(nil), "instructions.ChordInLyric")
	proto.RegisterType((*ChordsAndLyrics)(nil), "instructions.ChordsAndLyrics")
	proto.RegisterType((*ChordInstruction)(nil), "instructions.ChordInstruction")
}

func init() {
	proto.RegisterFile("instructions.proto", fileDescriptor_dfa0142f2ed0bc3e)
}

var fileDescriptor_dfa0142f2ed0bc3e = []byte{
	// 513 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xcf, 0x6f, 0x13, 0x3d,
	0x10, 0xfd, 0x9c, 0x64, 0xd3, 0xee, 0x34, 0x49, 0x37, 0xee, 0x27, 0xb0, 0x90, 0x2a, 0xca, 0x72,
	0x29, 0x20, 0xf5, 0x10, 0x0a, 0x67, 0x9a, 0x94, 0x1f, 0x11, 0x55, 0x22, 0xdc, 0x20, 0x24, 0x2e,
	0xab, 0xf5, 0xae, 0x1b, 0xac, 0xa4, 0xde, 0x68, 0xd7, 0x95, 0x9a, 0x3b, 0x27, 0x4e, 0xdc, 0xf8,
	0x77, 0x91, 0xc7, 0x5e, 0x42, 0x44, 0x4e, 0xe3, 0xf7, 0x3c, 0x7e, 0x79, 0xf3, 0x26, 0x0b, 0x54,
	0xe9, 0xca, 0x94, 0x77, 0x99, 0x51, 0x85, 0xae, 0xce, 0x56, 0x65, 0x61, 0x0a, 0xda, 0xf9, 0x9b,
	0x8b, 0x7f, 0x11, 0xe8, 0x5f, 0x9b, 0x52, 0xe9, 0xf9, 0xa8, 0xb8, 0x15, 0x4a, 0xa7, 0x96, 0xa6,
	0x3d, 0x68, 0xc8, 0x73, 0x46, 0x4e, 0xc8, 0x69, 0xc8, 0x1b, 0xf2, 0x9c, 0x76, 0x80, 0x08, 0xd6,
	0x40, 0x48, 0x84, 0x45, 0x73, 0xd6, 0x74, 0x68, 0x6e, 0x51, 0xce, 0x5a, 0x0e, 0xe5, 0x16, 0xa5,
	0x2c, 0x70, 0x28, 0x45, 0x9d, 0x01, 0x6b, 0x7b, 0x9d, 0x01, 0xfd, 0x1f, 0x82, 0xec, 0x5b, 0x51,
	0xe6, 0x6c, 0x0f, 0x29, 0x07, 0x2c, 0x3b, 0xbf, 0x53, 0xb9, 0x64, 0xfb, 0x8e, 0x45, 0x10, 0xff,
	0x24, 0x70, 0x34, 0x4b, 0xc5, 0x78, 0xe3, 0x76, 0xb8, 0x2c, 0xb2, 0x05, 0x7d, 0x05, 0xc1, 0x4a,
	0x65, 0x8b, 0x8a, 0x91, 0x93, 0xe6, 0xe9, 0xc1, 0xe0, 0xf1, 0xd9, 0xd6, 0x8c, 0xff, 0xcc, 0xc2,
	0x5d, 0x37, 0x3d, 0x06, 0x10, 0xa5, 0x4c, 0x17, 0xc9, 0x52, 0x69, 0x89, 0xb3, 0xec, 0xf3, 0x10,
	0x99, 0x2b, 0xa5, 0x25, 0x7d, 0x0a, 0x5d, 0x53, 0xa6, 0x6a, 0xa9, 0xf4, 0x3c, 0x31, 0xf2, 0xde,
	0xf8, 0xf9, 0x3a, 0x35, 0x39, 0x93, 0xf7, 0x26, 0xe6, 0xd0, 0xdb, 0x76, 0x44, 0xdf, 0x00, 0x98,
	0x54, 0x24, 0xc2, 0x3a, 0xab, 0x1d, 0x3d, 0xd9, 0x76, 0xb4, 0x63, 0x06, 0x1e, 0x9a, 0x54, 0xe0,
	0xa9, 0x8a, 0xaf, 0x21, 0x18, 0x61, 0x0a, 0xaf, 0x01, 0x30, 0x8e, 0xc4, 0xac, 0x57, 0x12, 0xb3,
	0xef, 0x0d, 0x1e, 0x6e, 0x4b, 0x61, 0xe3, 0x6c, 0xbd, 0x92, 0x3c, 0xcc, 0xea, 0x23, 0xa5, 0xd0,
	0xd2, 0xe9, 0xad, 0xf4, 0xeb, 0xc1, 0x73, 0xfc, 0x09, 0x3a, 0xd8, 0x3b, 0xd6, 0x57, 0xeb, 0x52,
	0x65, 0xf4, 0x59, 0x9d, 0xbb, 0x95, 0x3d, 0x18, 0x1c, 0xed, 0x90, 0xad, 0x97, 0xf1, 0x00, 0xda,
	0xc5, 0xcd, 0x4d, 0x25, 0x0d, 0x0a, 0x06, 0xdc, 0xa3, 0xf8, 0x3b, 0x81, 0x43, 0x6c, 0xac, 0x2e,
	0x74, 0x8e, 0xaa, 0x95, 0x5d, 0xaf, 0xca, 0xeb, 0xbf, 0x89, 0xca, 0x6d, 0xc6, 0x4b, 0x7b, 0xb3,
	0xc9, 0x38, 0xe4, 0x21, 0x32, 0x98, 0xf1, 0x10, 0x0e, 0xf1, 0x37, 0xaa, 0x44, 0xe9, 0x04, 0x69,
	0xd6, 0xc4, 0xc4, 0x1e, 0xed, 0xf0, 0xe3, 0xad, 0xf3, 0xae, 0x7b, 0xe2, 0x61, 0xfc, 0x83, 0x40,
	0xe4, 0xef, 0x37, 0x5b, 0x18, 0x43, 0xdf, 0x0b, 0xa7, 0x3a, 0x77, 0xca, 0xf5, 0x32, 0x8e, 0x77,
	0x48, 0x6f, 0x26, 0xe0, 0xde, 0xd0, 0x66, 0xa4, 0x17, 0xd0, 0x76, 0x14, 0x6b, 0xe0, 0xfb, 0x9d,
	0x51, 0xf9, 0x96, 0xe7, 0x53, 0x08, 0xff, 0xac, 0x84, 0xf6, 0xa1, 0xfb, 0x79, 0xf2, 0x71, 0x32,
	0xfd, 0x32, 0x49, 0x46, 0x1f, 0xa6, 0xfc, 0x32, 0xfa, 0x8f, 0x06, 0x40, 0x2e, 0x22, 0x62, 0xcb,
	0x30, 0x6a, 0xd8, 0x32, 0x8a, 0x9a, 0xb6, 0x5c, 0x46, 0x2d, 0x5b, 0xde, 0x46, 0x81, 0x2d, 0xef,
	0xa2, 0xb6, 0x2d, 0xef, 0xa3, 0xbd, 0x61, 0xe7, 0x2b, 0x54, 0x85, 0x13, 0x5f, 0x09, 0xd1, 0xc6,
	0x0f, 0xf6, 0xe5, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x2d, 0x32, 0x5d, 0xc6, 0x03, 0x00,
	0x00,
}
